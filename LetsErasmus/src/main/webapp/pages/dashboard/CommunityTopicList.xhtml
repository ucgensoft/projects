<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<ui:composition xmlns="http://www.w3.org/1999/xhtml"
	xmlns:ui="http://java.sun.com/jsf/facelets"
	xmlns:f="http://java.sun.com/jsf/core"
	xmlns:h="http://java.sun.com/jsf/html" template="/pages/Template.xhtml">

	<ui:define name="head">
		<meta name="robots" content="noindex"/>
		<link rel="stylesheet" type="text/css"
			href="#{webApplication.urlPrefix}/static/css/place/common_o2.css?ver=#{webApplication.staticFileVersion}" />
		<link rel="stylesheet" type="text/css"
			href="#{webApplication.urlPrefix}/static/css/place/your_listings.css?ver=#{webApplication.staticFileVersion}" />

		<style>
		  .custom-combobox {
		    position: relative;
		    display: inline-block;
		  }
		  .custom-combobox-toggle {
		    position: absolute;
		    top: 0;
		    bottom: 0;
		    margin-left: -1px;
		    padding: 0;
		  }
		  .custom-combobox-input {
		    margin: 0;
		    padding: 5px 10px;
		  }
	  </style>
		
	</ui:define>

	<ui:define name="body">
		<main id="site-content" role="main">
			<div class="page-container-responsive space-top-4 space-4">
				<div class="row">
					<div class="col-md-12">
						<div id="divTopicList">
							<div>
								<div class="suspension-container">
									<div class="panel space-4">
										<div class="space-top-4 inline-block" style="width:200px">
											<button style="float: right;" type="button"
												class="btn btn-primary btn-large" ng-click="ctrl.saveChanges()">Create New Topic</button>
										</div>
										<div class="select inline-block" style="margin-left: 10px">
											<select id="cmbCity">
												<option value="-1"
													selected="#{webApplication.user.erasmusUniversityId == null ? 'selected' : ''}">-Select City-</option>
												<ui:repeat var="university" value="#{userController.erasmusUniversityList}" varStatus="status">
													<option value="#{university.id}" selected="#{webApplication.user.erasmusUniversityId eq university.id ? 'selected' : ''}">#{university.name}</option>
												</ui:repeat>
											</select>
										</div>
										<select id="combobox">
										    <option value="">Select one...</option>
										    <option value="ActionScript">ActionScript</option>
										    <option value="AppleScript">AppleScript</option>
										    <option value="Asp">Asp</option>
										    <option value="BASIC">BASIC</option>
										    <option value="C">C</option>
										    <option value="C++">C++</option>
										    <option value="Clojure">Clojure</option>
										    <option value="COBOL">COBOL</option>
										    <option value="ColdFusion">ColdFusion</option>
										    <option value="Erlang">Erlang</option>
										    <option value="Fortran">Fortran</option>
										    <option value="Groovy">Groovy</option>
										    <option value="Haskell">Haskell</option>
										    <option value="Java">Java</option>
										    <option value="JavaScript">JavaScript</option>
										    <option value="Lisp">Lisp</option>
										    <option value="Perl">Perl</option>
										    <option value="PHP">PHP</option>
										    <option value="Python">Python</option>
										    <option value="Ruby">Ruby</option>
										    <option value="Scala">Scala</option>
										    <option value="Scheme">Scheme</option>
										  </select>
									</div>
									<div class="panel space-4">
										<div class="panel-header active-panel-header">
											<div class="active-panel-padding">Active Topics</div>
										</div>
										<ul class="list-unstyled list-layout">
											<li class="listing panel-body">
												<div class="row row-table" style="width:1000px; height: 30px;">
													<div class="">
														<div class="h4 inline-block" style="width:200px">TITLE</div>
														<div class="h4 inline-block" style="width:200px">
															CREATE DATE
														</div>
														<div class="h4 inline-block" style="width:200px">
															LAST MESSAGE
														</div>
														<div class="space-top-4 inline-block" style="width:200px">
															
														</div>
													</div>
												</div>
											</li>
											<li ng-repeat="t in ctrl.topicList"
												class="listing panel-body">
												<div class="row row-table" style="width:1000px; height: 30px;">
													<div class="">
														<div class="inline-block" style="width:200px">{{t.title}}</div>
														<div class="text-muted text-grey space-top-1 last-modified-date inline-block" style="width:200px">
															{{t.createdDate | date:'MMMM dd, yyyy'}}
														</div>
														<div class="text-muted text-grey space-top-1 last-modified-date inline-block" style="width:200px">
															{{p.modifiedDate | date:'MMMM dd, yyyy'}}
														</div>
														<div class="space-top-4 inline-block" style="width:200px">
															<a class="btn btn__first-btn btn-primary"
																style="margin-right: 0px"
																href="#{webApplication.urlPrefix}/become-a-host?placeId={{t.id}}"
																target="_blank"> <span>Edit</span>
															</a> 
															<a class="btn btn__second-btn" style="margin-right: 0px"
																href="#{webApplication.urlPrefix}/room/{{t.id}}"
																target="_blnak"> <span>Preview</span>
															</a>
														</div>
													</div>
												</div>
											</li>
										</ul>
									</div>
								</div>
							</div>
						</div>
					</div>
				</div>
			</div>
		</main>
		<script>
			var activeUserInfo = #{webApplication.user == null ? 'null' : '{ homeCityId : webApplication.user.homeCityId}'};
			
			$( function() {
			    $.widget( "custom.combobox", {
			      _create: function() {
			        this.wrapper = $( "<span>" )
			          .addClass( "custom-combobox" )
			          .insertAfter( this.element );
			 
			        this.element.hide();
			        this._createAutocomplete();
			        this._createShowAllButton();
			      },
			 
			      _createAutocomplete: function() {
			        var selected = this.element.children( ":selected" ),
			          value = selected.val() ? selected.text() : "";
			 
			        this.input = $( "<input>" )
			          .appendTo( this.wrapper )
			          .val( value )
			          .attr( "title", "" )
			          .addClass( "custom-combobox-input ui-widget ui-widget-content ui-state-default ui-corner-left" )
			          .autocomplete({
			            delay: 0,
			            minLength: 0,
			            source: $.proxy( this, "_source" )
			          })
			          .tooltip({
			            classes: {
			              "ui-tooltip": "ui-state-highlight"
			            }
			          });
			 
			        this._on( this.input, {
			          autocompleteselect: function( event, ui ) {
			            ui.item.option.selected = true;
			            this._trigger( "select", event, {
			              item: ui.item.option
			            });
			          },
			 
			          autocompletechange: "_removeIfInvalid"
			        });
			      },
			 
			      _createShowAllButton: function() {
			        var input = this.input,
			          wasOpen = false;
			 
			        $( "<a>" )
			          .attr( "tabIndex", -1 )
			          .attr( "title", "Show All Items" )
			          .tooltip()
			          .appendTo( this.wrapper )
			          .button({
			            icons: {
			              primary: "ui-icon-triangle-1-s"
			            },
			            text: false
			          })
			          .removeClass( "ui-corner-all" )
			          .addClass( "custom-combobox-toggle ui-corner-right" )
			          .on( "mousedown", function() {
			            wasOpen = input.autocomplete( "widget" ).is( ":visible" );
			          })
			          .on( "click", function() {
			            input.trigger( "focus" );
			 
			            // Close if already visible
			            if ( wasOpen ) {
			              return;
			            }
			 
			            // Pass empty string as value to search for, displaying all results
			            input.autocomplete( "search", "" );
			          });
			      },
			 
			      _source: function( request, response ) {
			        var matcher = new RegExp( $.ui.autocomplete.escapeRegex(request.term), "i" );
			        response( this.element.children( "option" ).map(function() {
			          var text = $( this ).text();
			          if ( this.value && ( !request.term || matcher.test(text) ) )
			            return {
			              label: text,
			              value: text,
			              option: this
			            };
			        }) );
			      },
			 
			      _removeIfInvalid: function( event, ui ) {
			 
			        // Selected an item, nothing to do
			        if ( ui.item ) {
			          return;
			        }
			 
			        // Search for a match (case-insensitive)
			        var value = this.input.val(),
			          valueLowerCase = value.toLowerCase(),
			          valid = false;
			        this.element.children( "option" ).each(function() {
			          if ( $( this ).text().toLowerCase() === valueLowerCase ) {
			            this.selected = valid = true;
			            return false;
			          }
			        });
			 
			        // Found a match, nothing to do
			        if ( valid ) {
			          return;
			        }
			 
			        // Remove invalid value
			        this.input
			          .val( "" )
			          .attr( "title", value + " didn't match any item" )
			          .tooltip( "open" );
			        this.element.val( "" );
			        this._delay(function() {
			          this.input.tooltip( "close" ).attr( "title", "" );
			        }, 2500 );
			        this.input.autocomplete( "instance" ).term = "";
			      },
			 
			      _destroy: function() {
			        this.wrapper.remove();
			        this.element.show();
			      }
			    });
			 
			    $( "#combobox" ).combobox();
			    $( "#toggle" ).on( "click", function() {
			      $( "#combobox" ).toggle();
			    });
			  } );
			
		</script>
		<script
			src="#{webApplication.urlPrefix}/static/js/angular/service/community_service.js?ver=#{webApplication.staticFileVersion}"></script>
		<script
			src="#{webApplication.urlPrefix}/static/js/angular/controller/community_topic_list_controller.js?ver=#{webApplication.staticFileVersion}"></script>
	</ui:define>
</ui:composition>